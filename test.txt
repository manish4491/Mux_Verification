class test extends uvm_test;
    `uvm_component_utils(test)
    function new(string name = "test",uvm_component parent);
        super.new(name,parent);
    endfunction

    environment e_h;
    virtual_sequence v_seq;
    env_config e_cfg;

    function void build_phase(uvm_phase phase);
        super.build_phase(phase);

        e_cfg = env_config::type_id::create("e_cfg");
            e_cfg.wr_cfg = UVM_ACTIVE;
            e_cfg.rd_cfg = UVM_PASSIVE;
        uvm_config_db#(env_config)::set(this,"*","env_config",e_cfg);
        e_h   = environment::type_id::create("e_h",this);

    endfunction

    task run_phase(uvm_phase phase);
        super.run_phase(phase);
        phase.raise_objection(this);
            v_seq = virtual_sequence::type_id::create("v_seq");
            v_seq.start(e_h.vsqr);
        phase.drop_objection(this);
    endtask

    function void end_of_elaboration_phase(uvm_phase phase);
        uvm_top.print_topology();
    endfunction
endclass
