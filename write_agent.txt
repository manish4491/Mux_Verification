class write_agent extends uvm_agent;
    `uvm_component_utils(write_agent)
    function new(string name="write_agent",uvm_component parent);
        super.new(name,parent);
    endfunction
    env_config env_cfg;
    wr_drv wr_d;
    wr_mon wr_m;
    wr_sequencer wr_sqr;

    function void build_phase(uvm_phase phase);
        super.build_phase(phase);

        if(!uvm_config_db#(env_config)::get(this,"","env_config",env_cfg))
            `uvm_fatal("WRITE_AGENT","FAILED TO RECIEVE CONFIG")
        if(env_cfg.wr_cfg==UVM_ACTIVE)
        begin
            wr_d = wr_drv::type_id::create("wr_d",this);
            wr_sqr = wr_sequencer::type_id::create("wr_sqr",this);
        end
            wr_m = wr_mon::type_id::create("wr_m",this);
    endfunction

    function void connect_phase(uvm_phase phase);
        super.connect_phase(phase);
        if(env_cfg.wr_cfg==UVM_ACTIVE)
            wr_d.seq_item_port.connect(wr_sqr.seq_item_export);
    endfunction
endclass
